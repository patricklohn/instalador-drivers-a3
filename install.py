import subprocess
import ctypes
import sys
import os

def run_as_admin():
    """Garante que o script tenha permiss√µes de administrador."""
    if not ctypes.windll.shell32.IsUserAnAdmin():
        print("üîπ Solicitando privil√©gios de administrador...")
        ctypes.windll.shell32.ShellExecuteW(
            None, "runas", sys.executable, " ".join(sys.argv), None, 1
        )
        sys.exit(0)

# Chama a fun√ß√£o para garantir permiss√µes elevadas
run_as_admin()

# Obt√©m o diret√≥rio onde o script est√° rodando
BASE_DIR = os.getcwd()  # Pasta onde o script est√° sendo executado

# Lista de instaladores com caminhos absolutos baseados no diret√≥rio do script

#(os.path.join(BASE_DIR, "DriversLeitora", "OMNIKEY3x21_x64AMD_for_R1_2_2_8.exe"), ["/S", "/v", "/qn", "/norestart"]),   
#(os.path.join(BASE_DIR, "DriversLeitora", "SCR3_DriversOnly_V8.41.exe"), ["/S", "/v", "/qn", "/norestart"]),
installers = [
    (os.path.join(BASE_DIR, "DriversLeitora", "gemccid_en-us_64.msi"), ["/quiet", "/norestart"]),
    (os.path.join(BASE_DIR, "DriversLeitora", "OMNIKEY3x21_x64AMD_for_R1_2_2_8.exe"),[]),
    (os.path.join(BASE_DIR, "DriversLeitora", "SCR3_DriversOnly_V8.41.exe"),[]),
    (os.path.join(BASE_DIR, "Cartoes", "AWP_Manager_5.1.8_64_bits.msi"), ["/quiet", "/norestart"]),
    (os.path.join(BASE_DIR, "Cartoes", "certisign10.6-x64-10.6.msi"), ["/quiet", "/norestart"]),
    (os.path.join(BASE_DIR, "Cartoes", "SafeSign_Identity_Client-Standard-3.0.87-general-x64-win-admin-std-vc8.exe"), []),
    (os.path.join(BASE_DIR, "Cartoes", "SafeSignIC30124-x64-win-tu-admin.exe"), []),
]

# Loop para instalar os programas
for installer, args in installers:
    try:
        # Verifica se o arquivo existe
        if not os.path.isfile(installer):
            print(f"‚ùå Arquivo n√£o encontrado: {installer}")
            continue
        
        print(f"üìå Instalando: {installer}...")

        # MSI usa msiexec
        if installer.endswith(".msi"):
            command = ["msiexec", "/i", installer] + args
        else:
            command = [installer] + args
        
        # Executa o processo
        process = subprocess.run(command, check=True, timeout=300, capture_output=True, text=True, shell=True)

        # Verifica retorno
        if process.returncode == 0:
            print(f"‚úÖ {installer} instalado com sucesso!\n")
        else:
            print(f"‚ö†Ô∏è {installer} pode n√£o ter sido instalado corretamente. C√≥digo: {process.returncode}\nSa√≠da: {process.stdout}\nErro: {process.stderr}\n")

    except subprocess.TimeoutExpired:
        print(f"‚è≥ Tempo limite excedido para {installer}. Ele pode estar esperando intera√ß√£o do usu√°rio.\n")

    except subprocess.CalledProcessError as e:
        print(f"‚ùå Erro ao instalar {installer}. C√≥digo: {e.returncode}\nSa√≠da: {e.output}\nErro: {e.stderr}\n")

    except Exception as e:
        print(f"‚ùå Erro inesperado ao instalar {installer}: {e}\n")

print("üéØ Instala√ß√£o conclu√≠da!")

input("Pressione Enter para sair...")
